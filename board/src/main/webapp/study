※ STS4 설치 및 설정
  1. Spring Starter Project로 생성 -> 검색을 통해 기본적인 설치 방법을 따라하면서 하다보니 Maven과 Gradle 사용의 목적과 이해도 부족으로 Maven으로 초기 설정
     ▶ Maven vs Gradle
       - Maven은 스프링 프로젝트에서 pom.xml으로 사용 / Gradle은 스프링부트, 안드로이드에서 사용
       - Maven은 개발 할 때 사용이 가능한 라이브러리들을 관리해주고 해당 라이브러리가 작동하는데 필요한 다른 라이브러리들까지 관리하여 자동으로 다운받아 사용을 가능하게 해준다.
       - Maven에서 pom.xml에 POM은 프로젝트 모델의 정보를 담고있는 파일이고 Maven의 기능을 이용하기 위해 POM이 사용된다.
       - Gradle는 빌드 배포 도구로 안드로이드 앱을 만들때 필요한 공식 빌드시스템이다.
       - Gradle는 스크립트 언어로 구성되어 있어 변수선언, if, else, for등 로직이 구현하다는 장점 하지만 Groovy 문법을 익혀야한다.
  2. STS와 깃허브 연동 -> 기본프로젝트 생성 후 깃허브와 연동하는 과정에서 기존 방식인 깃아이디와 비밀번호로 로그인했던 Authentication 방식이 이젠 깃허브 홈페이지에서 토근을 발급받아
                       발급받은 토큰을 이용해 Password 입력하는 방식으로 바뀌어 입력 후 로그인 가능
                    -> 연동하는 과정에서 깃허브 리퍼지토리 생성 할 때 gitignore를 생성하지 않아 리퍼지토리 재생성[★gitignore를 생성 하지 않을 시 수동생성]
  3. index.html -> 초기 설정에서 놓친부분이 있었는지 index.html 파일 누락. 경로 설정 후 서버를 돌려봤지만 한글깨짐 현상으로 html에서 charset 설정
  
※ 클래스 생성
  1. @ResponseBody -> 스프링의 메세지 컨버터에 의해 HTML이 아닌 리턴 타입에 해당하는 데이터 자체를 리턴
  2. @RestController -> @Controller는 주로 View(화면)을 반환하기 위해 사용된다. 여기서 Data를 반환해야 하는 경우 @ResponseBody 어노테이션을 활용해 JSON 형태의 테이터를
                        반환할 수 있다. 하지만 백엔드에서 Api를 통해 JSON으로 데이터만 전달하기 때문에 편리성을 위해 해당 어노테이션 사용
  3. @Data -> 엔터티 클래스를 만들면서 @Getter/Setter에 대한 어노테이션에 대해 찾아보다가 @Data에 대한 어노테이션을 공부하게 됨
            ▶ @Data 어노테이션은 @Getter/Setter, @ToString, @EqualsAndHashCode, @RequiredArgsConstructor를 합쳐 놓은 어노테이션이다. 코드의 간결성으로는
              장점이 많지만 @EqualsAndHashCode 동등성과 동일성을 비교해주는데 객체의 주소값과 상관없이 안에 들어있는 값만 비교를 하기 때문에 개발자의 의도와 달라질 수 있다고 생각한다.
  4. DTO클래스 -> @Getter/Setter를 import는 했지만 getter/setter가 만들어지지않는 오류가 생김 - 프로젝트 우클릭 / Spring / AddStarters에서 재확인후 재실행 - 적용안됨
             -> Maven Dependencies - lombok 우클릭 - Run As 실행 기존 이클립스 경로에서 sts경로로 바꿔주고 재실행하니 Getter/Setter 적용 확인 완료

※ 마이바티스 연동
  1. mapper, mybatis -> 폴더 및 xml 파일생성 - Caused by: org.xml.sax.SAXParseException: 예기치 않은 파일의 끝입니다. 에러 mybatis-config.xml 파일에 아무런 값도 넣지 않아 나오는에러
                        <configuration> 추가로 해결
                     -> Driver com.mysql.cj.jdbc.Driver claims to not accept jdbcUrl 연결 에러....
                        오류 해결 application.properties에서 오타와 경로 잘못 지정되어서 수정 완료
                     -> Controller > Service 까지 타는거 확인 했지만 org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): 라는 에러...